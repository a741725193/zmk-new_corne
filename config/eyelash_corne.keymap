#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <(-1)>;
    flavor = "balanced";
};

/ {
    combos {
        compatible = "zmk,combos";

        ltab {
            bindings = <&kp TAB>;
            key-positions = <16 43>;
        };

        kana {
            bindings = <&kp LA(GRAVE)>;
            key-positions = <37 36>;
        };

        app {
            bindings = <&kp K_APPLICATION>;
            key-positions = <37 38>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <30 31>;
        };

        shpst {
            bindings = <&kp LS(LC(V))>;
            key-positions = <33 32>;
        };
    };

    behaviors {
        rot_und_zd: rot_und_zd {
            compatible = "zmk,behavior-mod-morph";
            label = "ROT_UND_ZD";
            bindings = <&kp LC(Z)>, <&kp LC(MINUS)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rot_red_zu: rot_red_zu {
            compatible = "zmk,behavior-mod-morph";
            label = "ROT_RED_ZU";
            bindings = <&kp LC(Y)>, <&kp LC(EQUAL)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rot_ur_z: rot_ur_z {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROT_UR_Z";
            #sensor-binding-cells = <2>;
            bindings = <&rot_red_zu>, <&rot_und_zd>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        scroll_right_left: behavior_sensor_rotate_mouse_wheel_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp LBKT  &kp Q  &kp W           &kp E             &kp R                    &kp T                                              &mmv MOVE_UP                     &kp Y        &kp U                  &kp I                &kp O            &kp P      &to 1
&kp RBKT  &kp A  &mt LEFT_ALT S  &mt LCTRL D       &mt LEFT_SHIFT F         &kp G                              &mmv MOVE_LEFT  &mkp MB1        &mmv MOVE_RIGHT  &kp H        &mt RSHIFT J           &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &kp MINUS  &kp SEMICOLON
&kp APOS  &kp Z  &kp X           &kp C             &kp V                    &kp B            &kp LEFT_SHIFT                    &mmv MOVE_DOWN                   &kp N        &kp M                  &kp COMMA            &kp PERIOD       &kp SLASH  &kp EQUAL
                                 &mt LEFT_GUI ESC  &mt LEFT_CONTROL DELETE  &lt 2 BACKSPACE                                                                     &lt 3 SPACE  &mt RIGHT_SHIFT ENTER  &mt RIGHT_GUI TAB
            >;

            sensor-bindings = <&rot_ur_z 0 0>;
        };

        QLU {
            display-name = "QLU";
            bindings = <
&trans  &kp Q  &kp L           &kp U        &kp COMMA         &kp DOT                      &trans          &kp F   &kp W         &kp R                &kp Y            &kp P  &to 0
&trans  &kp E  &mt LEFT_ALT I  &mt LCTRL A  &mt LEFT_SHIFT O  &kp MINUS            &trans  &trans  &trans  &kp K   &mt RSHIFT T  &mt RIGHT_CONTROL N  &mt RIGHT_ALT S  &kp H  &trans
&trans  &kp Z  &kp X           &kp C        &kp V             &kp FSLH   &trans            &trans          &kp G   &kp D         &kp M                &kp J            &kp B  &trans
                               &trans       &trans            &trans                                       &trans  &trans        &trans
            >;

            sensor-bindings = <&rot_ur_z 0 0>;
        };

        left {
            display-name = "left";
            bindings = <
&trans  &kp HOME  &kp PG_UP                &kp UP                 &kp PG_DN        &kp BSLH                     &trans            &kp N6     &kp N7                    &kp N8                &kp N9                  &kp N0     &kp DOT
&trans  &kp END   &mt LEFT_ALT LEFT_ARROW  &mt LEFT_CONTROL DOWN  &mt LSHFT RIGHT  &kp GRAVE            &trans  &mkp MB3  &trans  &kp BSPC   &mt RIGHT_SHIFT NUMBER_4  &mt RIGHT_CONTROL N5  &mt RIGHT_ALT NUMBER_6  &kp MINUS  &kp EQUAL
&trans  &trans    &kp LS(LC(TAB))          &kp LC(TAB)            &mkp MB1         &mkp MB2   &trans            &trans            &kp COMMA  &kp N1                    &kp N2                &kp NUMBER_3            &kp SEMI   &kp FSLH
                                           &trans                 &trans           &trans                                         &trans     &trans                    &trans
            >;

            sensor-bindings = <&scroll_right_left>;
        };

        right {
            display-name = "right";
            bindings = <
&trans  &kp N1   &kp N2            &kp N3               &kp N4             &kp N5                    &trans            &kp HOME  &kp PG_UP             &kp UP                        &kp PG_DN            &kp F9  &trans
&trans  &kp F12  &mt LEFT_ALT F10  &mt LEFT_CONTROL F6  &mt LEFT_SHIFT F2  &kp F5            &trans  &mkp MB3  &trans  &kp END   &mt RIGHT_SHIFT LEFT  &mt RIGHT_CONTROL DOWN_ARROW  &mt RIGHT_ALT RIGHT  &kp F3  &trans
&trans  &kp F1   &kp F11           &kp F8               &kp F7             &kp F4  &trans            &trans            &mkp MB1  &mkp MB2              &kp RC(RS(TAB))               &kp RC(TAB)          &trans  &trans
                                   &trans               &trans             &trans                                      &trans    &trans                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        conf {
            display-name = "conf";
            bindings = <
&out OUT_USB     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                       &trans          &bt BT_CLR     &bt BT_CLR_ALL  &trans             &trans           &bl BL_INC     &bl BL_ON
&out OUT_BLE     &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF            &trans  &trans  &trans  &trans         &kp C_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bl BL_DEC     &bl BL_CYCLE
&rgb_ug RGB_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans            &trans          &bt BT_DISC 0  &bt BT_DISC 1   &bt BT_DISC 2      &bt BT_DISC 3    &bt BT_DISC 4  &bl BL_OFF
                                                   &trans           &trans           &trans                                             &trans         &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        conf {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
